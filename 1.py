something = {"admin": "alex", "mod": "devock"}

print(
    something.get("admin")
)  # если я не уверен что есть такой ключ в дикт тогда использовать этот метод он вернет None либо второе значение если оно есть
print(
    something["admin"]
)  # если я уверен что есть можно использовать такой метод но в случаи если такого ключа не будет выдаст ошибку KeyError
# get(key[, default]) - Возвращает значение для указанного ключа, если ключ существует, иначе возвращает значение по умолчанию (None, если не указано иное).

# items() - Возвращает все пары (ключ, значение) в словаре в виде объекта dict_items.

# keys() - Возвращает все ключи словаря в виде объекта dict_keys.

# values() - Возвращает все значения словаря в виде объекта dict_values.

# pop(key[, default]) - Удаляет элемент по указанному ключу и возвращает его значение. Если ключ не найден, возвращает значение по умолчанию или выбрасывает KeyError.

# popitem() - Удаляет и возвращает последнюю добавленную пару (ключ, значение) из словаря. Если словарь пуст, выбрасывает KeyError.

# update([other]) - Обновляет словарь, добавляя или перезаписывая элементы из другого словаря или итерируемого объекта.

# clear() - Удаляет все элементы из словаря, оставляя его пустым.

# setdefault(key[, default]) - Возвращает значение по ключу. Если ключ отсутствует, добавляет его с указанным значением по умолчанию и возвращает это значение.

# copy() - Возвращает поверхностную копию словаря.

# fromkeys(iterable[, value]) - Создает новый словарь с ключами из итерируемого объекта и устанавливает для всех ключей указанное значение (по умолчанию None).
